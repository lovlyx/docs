openapi: 3.0.3
info:
  title: GameBoost Seller API
  description: API for sellers to manage their accounts on gameboost.com
  version: 1.0.0
  contact:
    name: GameBoost Support
    email: support@gameboost.com
    url: https://gameboost.com/support
servers:
  - url: https://api.gameboost.com/v1
paths:
  /accounts:
    post:
      summary: Create Account
      description: Create a new account using the provided JSON schema. To get the schema, use the `/accounts/template/{gameSlug}` endpoint.
      operationId: createSellerAccount
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Successfully created the account.
    get:
      summary: Get All Accounts
      description: Retrieve a list of all accounts associated with the authenticated user. Use the optional `with_data` query parameter to load full account details.
      operationId: getSellerAccounts
      parameters:
        - name: with_data
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successfully retrieved the list of accounts.
  /accounts/template/{gameSlug}:
    get:
      summary: Get Account Schema
      description: Retrieve the JSON schema template for creating an account for a specific game.
      operationId: getAccountTemplate
      parameters:
        - name: gameSlug
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved the account template.
  /accounts/{accountId}:
    get:
      summary: Get Account
      description: Retrieve details of a specific account by its ID. Use the optional `with_data` query parameter to load full account details.
      operationId: getSellerAccountById
      parameters:
        - name: with_data
          in: query 
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Successfully retrieved the account.
    delete:
      summary: Delete Account
      description: Delete a specific account by its ID.
      operationId: deleteSellerAccount
      responses:
        '200':
          description: Successfully deleted the account.
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
  /accounts/by-login/{accountLogin}:
    get:
      summary: Get Account by Login
      description: Retrieve details of a specific account by its login.
      operationId: getSellerAccountByLogin
      responses:
        '200':
          description: Successfully retrieved the account.
    parameters:
      - name: accountLogin
        in: path
        required: true
        schema:
          type: string
  /accounts/{accountId}/status:
    patch:
      summary: Update Account Status
      description: List or unlist a specific account by updating its status.
      operationId: updateSellerAccountStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - listed
                    - draft
            examples:
              List/Unlist Account:
                value:
                  status: listed
      responses:
        '200':
          description: Successfully updated the account status.
    parameters:
      - name: accountId
        in: path
        required: true
        schema:
          type: integer
  /accounts/status/bulk:
    patch:
      summary: Bulk Update Status
      description: List or unlist multiple accounts by updating their status in bulk.
      operationId: bulkUpdateSellerAccountStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - accounts
                - status
              properties:
                accounts:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum:
                    - listed
                    - draft
            examples:
              Bulk List/Unlist Accounts:
                value: { "accounts": [ "{{accountId1}}", "{{accountId2}}" ], "status": "listed" }
      responses:
        '200':
          description: Successfully updated the status of multiple accounts.
  /item-offers:
    get:
      summary: Get All Item Offers
      description: Retrieve a list of all item offers associated with the authenticated user.
      operationId: getSellerItems
      responses:
        '200':
          description: Successfully retrieved the list of all items.
  /item-offers/{itemOfferId}:
    get:
      summary: Get Item Offer 
      description: Retrieve details of a specific item by its ID
      operationId: getSellerItemOfferById
      responses:
        '200':
          description: Successfully retrieved the account.
    parameters:
      - name: itemOfferId
        in: path
        required: true
        schema:
          type: integer
  /item-offers/{itemOfferId}/status:
    patch:
      summary: Update Item Offer Status
      description: List, unlist or archive a specific item offer by updating its status.
      operationId: updateSellerItemOfferStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - listed
                    - draft
                    - archived
            examples:
              Archive Item Offer:
                value:
                  status: archived
      responses:
        '200':
          description: Successfully updated the item offer status.
    parameters:
      - name: itemOfferId
        in: path
        required: true
        schema:
          type: integer 
  /item-offers/status/bulk:
    patch:
      summary: Bulk Update Item Offer Status
      description: List, unlist or archive multiple item offers by updating their status in bulk.
      operationId: bulkUpdateSellerItemOfferStatus
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - itemOffers
                - status
              properties:
                itemOffers:
                  type: array
                  items:
                    type: integer
                status:
                  type: string
                  enum:
                    - listed
                    - draft
                    - archived
            examples:
              Bulk Archive Item Offers:
                value: { "itemOffers": [ "{{itemOfferId1}}", "{{itemOfferId2}}" ], "status": "archived" }
      responses:
        '200':
          description: Successfully updated the status of multiple item offers.
  /currency-offers:
    get:
      summary: Get All Currency Offers
      description: Retrieve a list of all currency offers.
      operationId: getCurrencyOffers
      responses:
        '200':
          description: Successfully retrieved the list of currency offers.
    post:
      summary: Create Currency Offer
      description: Create a new currency offer.
      operationId: createCurrencyOffer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '201':
          description: Successfully created the currency offer.
  /currency-offers/{currencyOfferId}:
    get:
      summary: Get Currency Offer
      description: Retrieve details of a specific currency offer by its ID.
      operationId: getCurrencyOfferById
      parameters:
        - name: currencyOfferId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully retrieved the currency offer.
        '404':
          description: Currency offer not found.
    patch:
      summary: Update Currency Offer
      description: Update a specific currency offer by its ID.
      operationId: updateCurrencyOffer
      requestBody:
        content:
          application/json:
            schema:
              type: object
      responses:
        '200':
          description: Successfully updated the currency offer.
  /currency-offers/{currencyOfferId}/actions/list:
    patch:
      summary: List Currency Offer
      description: List a specific currency offer.
      operationId: listCurrencyOffer
      parameters:
        - name: currencyOfferId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully listed the currency offer.
  /currency-offers/{currencyOfferId}/actions/unlist:
    patch:
      summary: Unlist Currency Offer
      description: Unlist a specific currency offer.
      operationId: unlistCurrencyOffer
      parameters:
        - name: currencyOfferId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully unlisted the currency offer.
  /currency-offers/{currencyOfferId}/actions/archive:
    patch:
      summary: Archive Currency Offer
      description: Archive a specific currency offer.
      operationId: archiveCurrencyOffer
      parameters:
        - name: currencyOfferId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully archived the currency offer.
  /currency-offers/{currencyOfferId}/actions/unarchive:
    patch:
      summary: Restore Currency Offer
      description: Restore a specific currency offer.
      operationId: restoreCurrencyOffer
      parameters:
        - name: currencyOfferId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Successfully restored the currency offer.

components:
  schemas:
    Account:
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
security:
  - bearerAuth: []
tags: []